@charset "UTF-8";

/// Defines the language used by `a11y.css`. For now, only `fr` and `en` allowed.
/// @group languages
/// @param {String} $language
/// @output Nothing
/// @example scss - Defines the language to `fr`.
///  @include set-locale('fr');
@mixin set-locale($language) {
  $supported-languages: 'fr', 'en';
  $language: to-lower-case($language);

  @if not index($supported-languages, $language) {
    @error "Language `#{$language}` is not supported. Pull request welcome!";
  }

  $language: $language !global;
}


/// A11y outline
/// @access private
/// @param {String} $level - level to use
/// @output `outline`, `outline-offset` and `z-index`, all with `!important`
@mixin a11y-outline($level) {
  outline: 4px solid transparentize(theme-conf($level, 'color'), .25) !important;
  // @note Astuce suggérée par @7studio pour garantir un affichage homogène des bordures.
  // @see https://github.com/ffoodd/a11y.css/issues/4
  outline-offset: -4px;

  &::after {
    z-index: theme-conf($level, 'index') !important;
  }
}


/// Get a message from the translation map based on the defined language.
/// The message contains the icon associated to the message type.
/// @group languages
/// @param {String} $theme - Theme name
/// @param {String} $key - Key name
/// @require {function} message
/// @require $themes
/// @output `content`, with `!important`
/// @example scss - Get message for `nav` from `advice` category when language is set to `en`
/// .selector {
///   @include message('advice', 'nav');
/// }
/// @example css - Resulting CSS
/// .selector {
///   content: '\2665\00A0 Did you know the <nav> tag is exclusively restricted to primary and secondary navigation area?';
/// }
@mixin message($theme, $key) {
  content: quote(theme-conf($theme, 'icon') #{message($theme, $key)}) !important;
}
