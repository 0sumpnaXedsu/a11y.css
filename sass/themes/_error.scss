@charset "UTF-8";

/*doc
---
title: "[tabindex] > 0"
name: tab-order
category: Errors
---

The `[tabindex]` attribute should never be greater than 0.

* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L337>

```html_example
<button tabindex="1">Positive tabindex is bad</button>
```
*/
[tabindex]:not([tabindex="0"]):not([tabindex="-1"]) {
  @include error("tab-order");
}


/*doc
---
title: "No [href]"
name: no-href
category: Errors
---

The `[href]` attribute should never be empty. A link *to* something, right?

* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L161>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L165>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L386>

```html_example
<a>Who am I? Where do I link?</a>
```
*/
a:not([href]),
a[href=""] {
  @include error("no-href");
}


/*doc
---
title: "JS [href]"
name: href-js
category: Errors
---

The `[href]` attribute should not start with "javascript".
Should probably be a `<button>`, don't you think?

* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L165>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L392>

```html_example
<a>Who am I? Where do I link?</a>
```
*/
a[href^="javascript"] {
  @include error("href-js");
}


/*doc
---
title: "# [href]"
name: empty-href
category: Errors
---

The `[href]` attribute is only containing `#`.
Should probably be a `<button>` again, don't you think?

* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L165>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L386>

```html_example
<a href="#">Oh boy, I don't mean anything</a>
```
*/
a[href="#"] {
  @include error("empty-href");
}


/*doc
---
title: "Empty link"
name: empty-link
category: Errors
---

An empty link should have a label, within `[aria-label]` or targeted by `[aria-labelledby]`.
By the way, why would you use an empty link?

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-6-5>
* <http://www.w3.org/TR/WCAG20/#text-equiv-all>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-refs>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-link>
* <http://www.w3.org/TR/WCAG-TECHS/H30.html>
* <http://www.w3.org/TR/WCAG-TECHS/G91.html>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L193>

```html_example
<a href="/"></a>
```
*/
a:empty:not([aria-label]):not([aria-labelledby]) {
  @include error("empty-link");
}


/*doc
---
title: "Empty img link"
name: empty-image-link
category: Errors
---

When an `<img>` is a link only child, it must have an `[alt]`.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-6-5>
* <http://www.w3.org/TR/WCAG20/#text-equiv-all>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-refs>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-link>
* <http://www.w3.org/TR/WCAG-TECHS/G91.html>
* <http://www.w3.org/TR/WCAG-TECHS/H30.html>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L193>

```html_example
<a href="/"><img src="static/ffoodd.png" width="144" height="144" /><i> </i></a>
```
*/
a:not([aria-label]):not([aria-labelledby]) img:only-child:not([alt]) {
  @include error("empty-image-link");
}


/*doc
---
title: "Missing alternative for img"
name: no-alt
category: Errors
---

An `<img>` must have an `[alt]`. Always.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-1-1>
* <http://www.w3.org/TR/WCAG20/#text-equiv-all>
* <http://www.w3.org/TR/WCAG-TECHS/H36.html>
* <http://www.w3.org/TR/WCAG-TECHS/H37.html>
* <http://www.w3.org/TR/WCAG-TECHS/H24.html>
* <http://www.w3.org/TR/WCAG-TECHS/F65.html>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L369>

```html_example
<img src="static/ffoodd.png" width="144" height="144" /><i> </i>
<input type="image" src="static/ffoodd.png" /><i> </i>
```
*/
img:not([alt]),
area:not([alt]),
input[type="image"]:not([alt]) {
  @include error("no-alt", $self-closing: true);
}


/*doc
---
title: "Missing source for img"
name: no-src
category: Errors
---

An `<img>` must have an `[src]`. Obviously.

* <http://www.w3.org/TR/html5/embedded-content-0.html#attr-img-src>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L374>

```html_example
<img alt="No source" /><i> </i>
<input type="image" alt="No source" /><i> </i>
```
*/
img:not([src]),
img[src=""],
img[src="#"],
input[type="image"]:not([src]),
input[type="image"][src=""],
input[type="image"][src="#"] {
  @include error("no-src", $self-closing: true);
}


/*doc
---
title: "A label without a [for] attribute"
name: no-for
category: Errors
---

A `<label>` is labelling something, in theory.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-11-1>
* <http://www.w3.org/TR/WCAG20/#minimize-error-cues>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <http://www.w3.org/TR/WCAG-TECHS/H44.html>

```html_example
<label>Guess what?</label>
```
*/
label:not([for]),
label[for=""] {
  @include error("no-for");
}


/*doc
---
title: "Missing some kind of label"
name: no-id
category: Errors
---

How to label a field? You have a few choices: `[id]`, `[title]`, `[aria-label]` and `[aria-labelledby]`.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-11-1>
* <http://www.w3.org/TR/WCAG20/#minimize-error-cues>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-descriptive>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <http://www.w3.org/TR/WCAG-TECHS/H44.html>

```html_example
<input type="text" /><i> </i>
<select><option>Where</option><option>is</option><option>my</option><option>label?</option></select>
<textarea>Where's my label?</textarea>
```
*/
input:not([type="button"]):not([type="submit"]):not([type="hidden"]):not([type="reset"]):not([type="image"]):not([id]):not([aria-label]):not([title]):not([aria-labelledby]),
textarea:not([id]):not([aria-label]):not([aria-labelledby]) {
  @include error("no-id", $self-closing: true);
}

select:not([id]):not([aria-label]):not([aria-labelledby]) {
  @include error("no-id");
}

/*doc
---
title: "Missing a value"
name: no-value
category: Errors
---

How to label a `[reset]`, `[submit]` or `[button]` type input?
You still have a few choices: `[value]`, `[title]`, `[aria-label]` and `[aria-labelledby]`.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-11-9>
* <http://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <http://www.w3.org/TR/WCAG-TECHS/H91.html>

```html_example
<input type="reset" /><i> </i>
<input type="submit" /><i> </i>
<input type="button" /><i> </i>
```
*/
input[type="reset"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby]),
input[type="submit"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby]),
input[type="button"]:not([value]):not([title]):not([aria-label]):not([aria-labelledby]) {
  @include error("no-value", $self-closing: true);
}


/*doc
---
title: "Empty button"
name: empty-button
category: Errors
---

A `<button>` should either have content or an `[aria-label]` or `[aria-labelledby]`.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-11-9>
* <http://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <http://www.w3.org/TR/WCAG-TECHS/H91.html>
* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L193>

```html_example
<button></button>
<button><img src="static/ffoodd.png" width="144" height="144" /><i> </i></button>
```
*/
button:empty:not([aria-label]):not([aria-labelledby]) {
  @include error("empty-button");
}

button:not([aria-label]):not([aria-labelledby]) img:only-child:not([alt]) {
  @include error("empty-button", $self-closing: true );
}



/*doc
---
title: "Form button"
name: form-button
category: Errors
---

A `<button>` in a `<form>` is probably intended to do something.
Either use `[reset]`, `[submit]` or `[button]` type.

* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L189>

```html_example
<form action="/">
  <button>I just don't know what todo with myself</button>
</form>
```
*/
form button:not([type]) {
  @include error("form-button");
}


/*doc
---
title: "Disabled button"
name: disabled-button
category: Errors
---

A `<button>` styled to be disabled should be disabled *for real*.
Use `[disabled]` and `[readonly]`.

* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L122>

```html_example
<button class="is-disabled">To be or not to be (disabled)?</button>
```
*/
button[class*="disabled"]:not([disabled]):not([readonly]) {
  @include error("disabled-button");
}


/*doc
---
title: "input without [type]"
name: no-type
category: Errors
---

`<input>` needs a `[type]` in order to tell the user what kind of data is wanted.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-11-11>
* <http://www.w3.org/TR/WCAG20/#minimize-error-suggestions>

```html_example
<input value="Whatever you want" /><i> </i>
```
*/
input:not([type]),
input[type=""] {
  @include error("no-type", $self-closing: true);
}


/*doc
---
title: "optgroup without label"
name: optgroup
category: Errors
---

`<optgroup>` needs a `[label]` to explain what's inside the group.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-11-8>
* <http://www.w3.org/TR/WCAG-TECHS/H85.html>
* <http://www.w3.org/TR/2014/NOTE-WCAG20-TECHS-20140916/H85>

```html_example
<form action="/">
    <label for="optgroup">Oh, hey</label>
    <select id="optgroup">
      <optgroup label="I'm a group">
        <option value="1">I'm an option</option>
        <option value="2">I'm another option</option>
      </optgroup>
      <optgroup label="I'm another group">
        <option value="3">I'm an option, but from another group</option>
        <option value="4">I'm another option, still from another group</option>
     </optgroup>
   </select>
</form>
```
*/
optgroup:not([label]) {
  @include error("optgroup");
}


/*doc
---
title: "iframe without [title]"
name: no-title
category: Errors
---

`<iframe>` needs a `[title]` in order to tell the user what to expect inside the iframe.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-2-1>
* <http://www.w3.org/TR/WCAG20/#ensure-compat-rsv>
* <http://www.w3.org/TR/WCAG-TECHS/H64.html>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L454>

```html_example
<iframe height="500" width="500" src="http://www.ffoodd.fr"></iframe>
```
*/
iframe:not([title]),
iframe[title=""] {
  @include error("no-title");
}


/*doc
---
title: "form missing an [action]"
name: no-action
category: Errors
---

`<form>` should do something, isnt'it? Well, `[action]` is meant to define what.

* <https://github.com/Heydon/REVENGE.CSS/blob/master/revenge.css#L214>

```html_example
<form>
  <label for="input">Guess what do we do with your datas?</label>
  <input id="input" type="text" />

  <input type="submit" value="No idea, huh?"/>
</form>
```
*/
form:not([action]) {
  @include error("no-action");
}


/*doc
---
title: "No language defined"
name: no-lang
category: Errors
---

`<html>` must indicate to User Agents the human language used in the document.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-8-3>
* <http://www.accessiweb.org/index.php/glossaire-du-referentiel-accessiweb-html5aria.html#mLangueDefaut>
* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-8-4>
* <http://www.w3.org/TR/WCAG20/#meaning-doc-lang-id>
* <http://www.w3.org/TR/WCAG-TECHS/H57.html>

```html_example
<html>
  <head>
    <title>Je ne parle pas Français</title>
  </head>
  <body>
    <ul>
      <li>Speak French?</li>
      <li>Habla usted francés?</li>
      <li>Sprechen Sie Französisch?</li>
    </ul>
  </body>
</html>
```
*/
html:not([lang]),
html[lang=""] {
  @include error("no-lang");
}


/*doc
---
title: "table used for layout"
name: table-for-layout
category: Errors
---

`<table>` may be used for layout if a [role="presentation"] is added.
However, semantics tags and attributes aiming to organize datas mustn't be used. Here's a list:
* `<th>`;
* `<thead>`;
* `<tfoot>`;
* `<caption>`;
* `[axis]`;
* `[scope]`;
* `[headers]`;
* `[colgroup]`.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-5-8>
* <http://www.w3.org/TR/WCAG-TECHS/F46.html>
* <http://www.w3.org/TR/2014/NOTE-WCAG20-TECHS-20140916/F49>

```html_example
<table role="presentation">
  <caption>I do not mean anything!</caption>
  <thead>
    <tr>
      <th scope="col" id="col">Nope</th>
      <th>Just sayin'</th>
    </tr>
  </thead>
  <tfoot>
    <tr>
      <td colspan="2" headers="col">Hello world</td>
    </tr>
  </tfoot>
  <tbody>
    <tr>
      <td colspan="2">It works</td>
    </tr>
  </tbody>
</table>
```
*/
table[role="presentation"] th,
table[role="presentation"] thead,
table[role="presentation"] tfoot,
table[role="presentation"] caption,
table[role="presentation"] [axis],
table[role="presentation"] [scope],
table[role="presentation"] [headers],
table[role="presentation"] [colgroup] {
  @include error("table-for-layout");
}


/*doc
---
title: "[width] & [height] attributes"
name: dimensions
category: Errors
---

`[width]` and `[height]` are presentation informations.
Therefore it shouldn't be used in markup, except for `<img>`. Use CSS instead.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-10-1>
* <http://www.accessiweb.org/index.php/glossaire-du-referentiel-accessiweb-html5aria.html#mPresInfo>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-sequence>

```html_example
<p width="20">Damned! I feel sooo strait :(</p>
```
*/
:not(img)[width],
:not(img)[height] {
  @include error("dimensions");
}


/*doc
---
title: "Javascript events attributes"
name: js-events
category: Errors
---

Javascript event attributes (such as `[onmouseover]`) should not be used.
Prefer either CSS pseudo-classes (`:hover`, `:focus`, `:active`, etc.) or JS event listeners.

* <https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes>
* <https://developer.mozilla.org/en-US/docs/Web/API/EventTarget.addEventListener>

```html_example
<span onmouseover="alert('You clicked!');">Click click click</span>
```
*/
[onafterprint], [onbeforeprint], [onbeforeunload],
[onerror], [onhaschange], [onload], [onmessage],
[onoffline], [ononline], [onpagehide], [onpageshow],
[onpopstate], [onredo], [onresize], [onstorage],
[onundo], [onunload],
[onblur], [onchage], [oncontextmenu], [onfocus],
[onformchange], [onforminput], [oninput], [oninvalid],
[onreset], [onselect], [onsubmit],
[onkeydown], [onkeypress], [onkeyup],
[onclick], [ondblclick], [ondrag], [ondragend],
[ondragenter], [ondragleave], [ondragover],
[ondragstart], [ondrop], [onmousedown], [onmousemove],
[onmouseout], [onmouseover], [onmouseup], [onmousewheel],
[onscroll],
[onabort], [oncanplay], [oncanplaythrough],
[ondurationchange], [onemptied], [onended], [onerror],
[onloadeddata], [onloadedmetadata], [onloadstart],
[onpause], [onplay], [onplaying], [onprogress],
[onratechange], [onreadystatechange], [onseeked],
[onseeking], [onstalled], [onsuspend], [ontimeupdate],
[onvolumechange], [onwaiting] {
  @include error("js-events");
}


/*doc
---
title: "Namespaces"
name: namespace
category: Errors
---

Did you know that some characters should be avoided in class names and identifiers?
Yep. Numbers and special chars.

* <http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#w3cselgrammar>
* <http://www.w3.org/Style/CSS/Test/CSS3/Selectors/current/>
* <http://www.w3.org/Style/CSS/Test/CSS3/Selectors/current/html/tests/css3-modsel-175a.html>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L466>
* <https://github.com/yahoo/debugCSS/blob/master/debugCSS.css#L480>

```html_example
<div id="2">Hello! My ID is 2.</div>
```
*/
[id^="1"],
[id^="2"],
[id^="3"],
[id^="4"],
[id^="5"],
[id^="6"],
[id^="7"],
[id^="8"],
[id^="9"],
[id^="0"],
[id*="\~"],
[id*="\!"],
[id*="\@"],
[id*="\$"],
[id*="\^"],
[id*="\&"],
[id*="\*"],
[id*="\("],
[id*="\)"],
[id*="\="],
[id*="\,"],
[id*="\/"],
[id*="\'"],
[id*="\;"],
[id*="\:"],
[id*="\""],
[id*="\?"],
[id*="\>"],
[id*="\<"],
[id*="\["],
[id*="\{"],
[id*="\}"],
[id*="\|"],
[id*="\`"],
[class^="1"],
[class^="2"],
[class^="3"],
[class^="4"],
[class^="5"],
[class^="6"],
[class^="7"],
[class^="8"],
[class^="9"],
[class^="0"],
[class*="\~"],
[class*="\!"],
[class*="\@"],
[class*="\$"],
[class*="\^"],
[class*="\&"],
[class*="\*"],
[class*="\("],
[class*="\)"],
[class*="\="],
[class*="\,"],
[class*="\/"],
[class*="\'"],
[class*="\;"],
[class*="\:"],
[class*="\""],
[class*="\?"],
[class*="\>"],
[class*="\<"],
[class*="\["],
[class*="\{"],
[class*="\}"],
[class*="\|"],
[class*="\`"] {
  @include error("namespace");
}


/*doc
---
title: "[style] attribute"
name: style-attr
category: Errors
---

Your styles should be driven by a CSS file. That's it.
And no, JS shouldn't manipulate styles: it's better to play with classes, for example.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-10-1>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-programmatic>
* <http://www.w3.org/TR/WCAG20/#content-structure-separation-sequence>

```html_example
<div style="color: red;">I'm red. I really feel dirty.</div>
```
*/
[style] {
  @include error("style-attr");
}


meta[http-equiv="refresh"] {
  @include error("meta-refresh", $self-closing: true);

  // Because it's in the <head>
  display: block !important;
  &::after {
    content: "<meta http-equiv=" attr(http-equiv) ">";
  }
}


/*doc
---
title: "Empty title"
name: no-page-title
category: Errors
---

Your styles should be driven by a CSS file. That's it.
And no, JS shouldn't manipulate styles: it's better to play with classes, for example.

* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-8-5>
* <http://www.accessiweb.org/index.php/accessiweb-html5aria-liste-deployee.html#crit-8-6>
* <http://www.w3.org/TR/WCAG20/#navigation-mechanisms-title>
* <http://www.w3.org/TR/WCAG-TECHS/G88.html>
* <http://www.w3.org/TR/WCAG-TECHS/H25.html>
* <http://www.w3.org/TR/WCAG-TECHS/F25.html>

```html_example
<title></title>
```
*/
head title:empty:not(iframe):not(textarea):not(area):not(base):not(br):not(col):not(command):not(embed):not(hr):not(img):not(input):not(keygen):not(link):not(meta):not(param):not(source):not(track):not(wbr) {
  @include error("no-page-title");

  // Because it's in the <head>
  display: block !important;
  &::after {
    content: "<title></title>";
  }
}
